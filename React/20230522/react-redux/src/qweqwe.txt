import { createStore } from 'redux';

const plus = document.getElementById("plus");
const minus = document.getElementById("minus");
const number = document.getElementById("number"); // 수량
const quantity = document.getElementById("quantity"); // 페이지 하단에 총 수량
const totalPrice = document.getElementById("total"); // 페이지 하단에 총 가격

const PRICE = 17500;

// dispatch 함수 선언
const addNumber = () => {
  store.dispatch({ type: "ADD"})
}

const substractNumber = () => {
  store.dispatch({ type: "SUBSTRACT"})
}

// reducer 함수 선언
const countReducer = (state = 0, action) => {
  switch (action.type) {
    case 'ADD':
      minus.disable = false;
      return state + 1;
    case 'SUBSTRACT':
      return state - 1;
      plus.disable = false;
    default: {
      return state;
    }
  }
}

const store = createStore(countReducer);
// Redux의 state와 같은 역할
// let count = 0;

const handleWrite = () => {
    number.innerText = store.getState();
    quantity.innerHTML = store.getState()
    totalPrice.innerHTML = store.getState() * PRICE;
};

store.subscribe(handleWrite)

// // UI Update - text 
// // Redux의 render 함수와 같은 역할
// const updateResult = (c) => {
//     number.innerText = c;
//     quantity.innerHTML = c;
//     totalPrice.innerHTML = c * PRICE;
// };

// // State Change
// // Redux의 reducer 함수와 같은 역할
// const addNumber = () => {
//     count += 1;
//     minus.disabled = false;
//     updateResult(count);
// };

// // State Change
// const substractNumber = () => {
//     count -= 1;
//     plus.disabled = false;
//     updateResult(count);
// };

// // Init
// number.innerHTML = count;
// updateResult(count);


// // Event
// plus.addEventListener("click", addNumber);
// minus.addEventListener("click", substractNumber);